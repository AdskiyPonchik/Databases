1. CREATE TABLE student (
  id SERIAL PRIMARY KEY,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  course VARCHAR(100) NOT NULL
);

CREATE TABLE restaurant (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  owner VARCHAR(100) NOT NULL,
  postal_code VARCHAR(10) NOT NULL,
  city VARCHAR(50) NOT NULL,
  street VARCHAR(100) NOT NULL
);

2. create table STUDENT_RESTAURANT(
	student_id INT references student(id),
	restaurant_id INT references restaurant(id),
	primary key (student_id, restaurant_id)
);

alter table student add column age INT;

3. 

create table PRODUCER(
	vineyard VARCHAR(100) primary key,
	area VARCHAR(100) unique,
	region VARCHAR(100)
);

create table PRODUCER(
	vineyard VARCHAR(100) primary key,
	area VARCHAR(100) unique,
	region VARCHAR(100)
);

4. CREATE TABLE FOOTBALL_PLAYER (
    player_id SERIAL PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    birth_date DATE,
    shirt_number INT,
    position VARCHAR(20) CHECK (position IN ('Goalkeeper', 'Defence', 'Forwards', 'Midfield'))
); ??? 

create type position_type as enum ('Goalkeeper', 'Defence', 'Forwards', 'Midfield');

create table FOOTBALL_PLAYER(
	player_id SERIAL primary key,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	birth_date DATE,
	shirt_nubmer INT,
	position position_type
);

5.

--INSERT INTO PRODUCER (vineyard, area, region) VALUES ('Creek', 'Barossa Valley', 'South Australia');

--insert into producer (vineyard, area, region) VALUES('The Johannishof Winery', 'Rheingau', 'Hessen');
--insert into wine (name, year, vineyard) values ('Merlot', 2009, 'Creek');


6. 
--update wine set year = year+1 where color = 'red';
--select * from wine;
delete from wine; --alternatively: truncate table wine; !!DANGER!!
drop table producer CASCADE; --this deletes with dependencies
-- alternatively: ALTER TABLE WINE DROP CONSTRAINT wine_vineyard_fkey; 
-- to drop foreign keys in wine, then: DROP TABLE PRODUCER;